
service: go-ui

frameworkVersion: "=1.57.0"

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage, env:stage, 'dev'}
  region: us-west-2

custom:
  certificateArn: arn:aws:acm:us-east-1:863138142000:certificate/2bf0b9d2-f40e-409d-b963-a88e59e51d3a

resources:
  Resources:

    S3BucketWebApp:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: growme-go-${self:provider.stage}-ui
        AccessControl: PublicRead
        WebsiteConfiguration:
          ErrorDocument: index.html
          IndexDocument: index.html
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - '*'
              AllowedMethods:
                - PUT
                - GET
              AllowedOrigins: ${file(./serverless-${self:provider.stage}.yml):cors.allowedOrigins}
              MaxAge: 3000


    S3PublicReadPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref S3BucketWebApp
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref S3BucketWebApp
                - /*

    CloudFrontWebApp:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Aliases:
            - ${file(./serverless-${self:provider.stage}.yml):cloudFrontAlias}
          CustomErrorResponses:
            - ErrorCachingMinTTL: 0
              ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
          DefaultCacheBehavior:
            AllowedMethods:
              - HEAD
              - GET
            CachedMethods:
              - HEAD
              - GET
            Compress: false
            DefaultTTL: 3600
            ForwardedValues:
              Cookies:
                Forward: none
              QueryString: true
            MaxTTL: 18000
            MinTTL: 5
            SmoothStreaming: false
            TargetOriginId: !Ref S3BucketWebApp
            ViewerProtocolPolicy: redirect-to-https
          DefaultRootObject: index.html
          Enabled: true
          HttpVersion: http2
          IPV6Enabled: true
          Origins:
            - CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginKeepaliveTimeout: 5
                OriginProtocolPolicy: http-only
                OriginReadTimeout: 30
                OriginSSLProtocols:
                  - TLSv1
                  - TLSv1.1
                  - TLSv1.2
              DomainName: !GetAtt S3BucketWebApp.RegionalDomainName
              Id: !Ref S3BucketWebApp
          PriceClass: PriceClass_100
          ViewerCertificate:
            AcmCertificateArn: ${self:custom.certificateArn}
            MinimumProtocolVersion: TLSv1.2_2018
            SslSupportMethod: sni-only

    Route53RecordSetAlias:
      Type: AWS::Route53::RecordSet
      Properties:
        AliasTarget:
          DNSName: !GetAtt CloudFrontWebApp.DomainName
          EvaluateTargetHealth: false
          # hosted zone for cloud formation
          # https://docs.aws.amazon.com/general/latest/gr/rande.html#elb_region
          HostedZoneId: Z2FDTNDATAQYW2
        HostedZoneName: growme.fyi.
        Name: ${file(./serverless-${self:provider.stage}.yml):cloudFrontAlias}
        Type: 'A'

    ManagedPolicyS3BucketAccess:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        Description: S3 bucket upload access
        ManagedPolicyName: growme-go-ui-${self:provider.stage}-s3-access
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "s3:GetObject"
                - "s3:PutObject"
              Resource:
                - !Join
                  - ''
                  - - !GetAtt S3BucketWebApp.Arn
                    - '/*'
            - Effect: Deny
              Action:
                - "s3:GetObject"
                - "s3:PutObject"
              Resource:
                - !Join
                  - ''
                  - - !GetAtt S3BucketWebApp.Arn
                    - '/index.html'
            - Effect: Deny
              Action:
                - "s3:GetObject"
                - "s3:PutObject"
              Resource:
                - !Join
                  - ''
                  - - !GetAtt S3BucketWebApp.Arn
                    - '/main.bundle.js'
        Roles:
          - growme_auth_${self:provider.stage}_identity_pool_auth_role
